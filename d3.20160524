//=== https://github.com/d3/d3/wiki/SVG-Axes

The axis component is designed to work with D3â€™s quantitative, time and ordinal scales.

# d3.svg.axis()

Create a new default axis.

# axis(selection)

Apply the axis to a selection or transition. The selection must contain an svg or g element. For example:

d3.select("body").append("svg")
    .attr("class", "axis")
    .attr("width", 1440)
    .attr("height", 30)
  .append("g")
    .attr("transform", "translate(0,30)")
    .call(axis);

//=== https://jsfiddle.net/eamonnmag/47TtN/
    var x = calculateXScale(data, width);
    var y = calculateYScale(data, height);

    var xAxis = d3.svg.axis().scale(x).orient("bottom").tickPadding(2);
    var yAxis = d3.svg.axis().scale(y).orient("left").tickPadding(2);
     
    svg.selectAll("g.y.axis").transition().duration(500).call(yAxis);
    svg.selectAll("g.x.axis").transition().duration(500).call(xAxis);
    
//=== https://github.com/d3/d3/wiki/SVG-Axes

# axis.tickPadding([padding])

If padding is specified, sets the padding to the specified value in pixels and returns the axis. If padding is not specified, returns the current padding which defaults to 3 pixels.

# axis.tickFormat([format])

If format is specified, sets the format to the specified function and returns the axis. If format is not specified, returns the current format function, which defaults to null. A null format indicates that the scale's default formatter should be used, which is generated by calling scale.tickFormat. In this case, the arguments specified by ticks are likewise passed to scale.tickFormat.

See d3.format for help creating formatters. For example, axis.tickFormat(d3.format(",.0f")) will display integers with comma-grouping for thousands. Defining the formatter first: var commasFormatter = d3.format(",.0f") lets you to call it as a function of your data, for example, to add currency units in front of the comma-grouped integers: .tickFormat(function(d) { return "$" + commasFormatter(d); }).
    
//===
# axis.scale([scale])

If scale is specified, sets the scale and returns the axis. If scale is not specified, returns the current scale which defaults to a linear scale.

# axis.orient([orientation])

If orientation is specified, sets the orientation and returns the axis. If orientation is not specified, returns the current orientation which defaults to "bottom". The following orientations are supported:

"top" - horizontal axis with ticks above the domain path
"bottom" - horizontal axis with ticks below the domain path
"left" - vertical axis with ticks to the left of the domain path
"right" - vertical axis with ticks to the right of the domain path
If the specified orientation is not one of the supported values, the axis reverts to the default orientation. 
